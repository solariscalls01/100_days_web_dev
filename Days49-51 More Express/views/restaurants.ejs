<!DOCTYPE html>
<html lang="en">
  <%- include('includes/head.ejs') %>
  <link rel="stylesheet" href="styles/restaurants.css">
  <body>
    <!-- USING THE EJS INCLUDE to add partial segments  -->
  <body>
    <header id="main-header">
      <div id="logo"><a href="/">Eatwell</a></div>
      <nav>
        <ul>
          <li class="nav-item">
            <!-- When using any backend routes, the href no longer takes in the .html portion. Instead it needs to match the route from the app.js -->
            <a href="/restaurants">Browse Restaurants</a>
          </li>
          <li class="nav-item">
            <a href="/recommend">Share a Restaurant</a>
          </li>
          <li class="nav-item"><a href="/about">About Eatwell</a></li>
        </ul>
      </nav>
      <button id="drawer-btn">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </header>
    <%- include('includes/navbar') %>
    <main>
      <h1>Recommended restaurants</h1>

      <!-- Using the EJS if / else statement.  -->
      <% if (numberofRestaurants < 1) { %>
      <p>There are currently no restaurants to display</p>
      <% } else { %>
        
      <!-- USING EJS TEMPLATING SYNTAX -->
      <!-- Template format uses the < %= anyvariablenameyouwant %>  -->
      <!-- The variable inside the syntax will be passed in the app.get, in the res.render section -->

      <p>We found <%= numberofRestaurants %> restaurants.</p>
      <p>Find your next favorite restaurants with help of our other users!</p>
      <ul id="restaurants-list">

        <!-- USING EJS to loop to iterate through a segment of code. Using the for loop, we iterate through the restaurants.json file and use the objects to parse through the key/value pair 
          for our loop to output the items we want. (e.g., .name, .address .website). In order to connect the restaurants object, we need to connect it in the res.render in the app.js -->
        <!-- The setup for the loop in this case needs to be that the objects be inside the li items or articles.  -->
        <% for (const restaurant of restaurants) { %>
          <!-- since we are using the partial templating here, we need to also add the options (2nd parameter) to link our key/value pairs. The first item "a" is the key 
            that we used in the restaurant.ejs section (named it a just to showcase the identifiers). The value "restaurant" is coming from the for loop  -->
        <%- include('includes/restaurant/restaurant.ejs', {a: restaurant}) %>
        <% } %> <% } %>
      </ul>
    </main>
  </body>
</html>
